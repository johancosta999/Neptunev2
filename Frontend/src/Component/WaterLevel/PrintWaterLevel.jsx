import React from "react";
import "./WaterLevel.css";

const PrintWaterLevel = React.forwardRef(({ records }, ref) => (
  <div ref={ref} className="water-level-container" style={{ background: "white", color: "black" }}>
    <div className="water-level-wrapper">
      <div className="water-level-header">
        <h1 className="water-level-title" style={{ color: "#0a0f1e" }}>ðŸ’§ Water Level Report</h1>
        <p className="water-level-subtitle" style={{ color: "#6b7280" }}>
          Generated on {new Date().toLocaleDateString()} at {new Date().toLocaleTimeString()}
        </p>
      </div>

      <div className="water-level-card" style={{ background: "white", border: "1px solid #e5e7eb" }}>
        <div className="water-level-header">
          <h2 className="water-level-title" style={{ color: "#0a0f1e" }}>ðŸ“Š Water Level Data</h2>
        </div>
        
        <div style={{ overflowX: "auto" }}>
          <table className="water-level-table" style={{ background: "white" }}>
            <thead>
              <tr>
                <th>Tank ID</th>
                <th>Location</th>
                <th>Water Level (%)</th>
                <th>Status</th>
                <th>Recorded At</th>
              </tr>
            </thead>
            <tbody>
              {records.map((rec) => (
                <tr key={rec._id}>
                  <td>{rec.tankId}</td>
                  <td>{rec.location || "N/A"}</td>
                  <td>{rec.currentLevel || rec.waterLevel || 0}%</td>
                  <td>{rec.status || "Unknown"}</td>
                  <td>{new Date(rec.recordedAt || rec.timestamp).toLocaleString()}</td>
                </tr>
              ))}
              {records.length === 0 && (
                <tr>
                  <td colSpan={5} style={{ textAlign: "center", color: "#6b7280" }}>
                    No water level records available
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>

        {/* Summary Statistics */}
        {records.length > 0 && (
          <div style={{ marginTop: "24px", padding: "16px", background: "#f8fafc", borderRadius: "8px" }}>
            <h3 style={{ color: "#0a0f1e", margin: "0 0 12px 0" }}>ðŸ“ˆ Summary Statistics</h3>
            <div style={{ display: "grid", gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))", gap: "16px" }}>
              <div>
                <strong>Total Records:</strong> {records.length}
              </div>
              <div>
                <strong>Average Level:</strong> {Math.round(records.reduce((sum, rec) => sum + (rec.currentLevel || rec.waterLevel || 0), 0) / records.length)}%
              </div>
              <div>
                <strong>Highest Level:</strong> {Math.max(...records.map(rec => rec.currentLevel || rec.waterLevel || 0))}%
              </div>
              <div>
                <strong>Lowest Level:</strong> {Math.min(...records.map(rec => rec.currentLevel || rec.waterLevel || 0))}%
              </div>
            </div>
          </div>
        )}

        {/* Footer */}
        <div style={{ 
          marginTop: "24px", 
          padding: "16px", 
          borderTop: "1px solid #e5e7eb", 
          textAlign: "center", 
          color: "#6b7280",
          fontSize: "12px"
        }}>
          <p>Generated by Neptune Smart Water Management System</p>
          <p>Â© {new Date().getFullYear()} All rights reserved</p>
        </div>
      </div>
    </div>
  </div>
));

export default PrintWaterLevel;
